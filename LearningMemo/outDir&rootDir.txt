outDir (Output Directory: 出力ディレクトリ)
説明: TypeScript コンパイラ (tsc) が、コンパイル後の JavaScript ファイル (.js) や型定義ファイル (.d.ts) などの出力ファイルを保存するディレクトリを指定します。
用途: ソースコードとコンパイル済みコードを分けて管理するために使われます。例えば、ソースコードは src フォルダに、出力ファイルは dist や build フォルダに保存するといった運用が一般的です。
例: "outDir": "./dist" と設定すると、tsc を実行したときに dist フォルダが作成され、その中にコンパイルされた .js ファイルなどが生成されます。


rootDir (Root Directory: ルートディレクトリ)
説明: TypeScript コンパイラが、入力となる TypeScript ソースファイル (.ts, .tsx) を探す際の基準となるディレクトリを指定します。
用途:
コンパイル時に、rootDir で指定されたディレクトリ内のファイル構造を維持したまま、outDir へ出力ファイルを生成するために使用されます。これにより、ソースコードの階層構造が出力ディレクトリにも反映されます。
プロジェクトの論理的なルートを示し、モジュールの解決（import 文のパス解決など）の基準となることがあります。


例:
"rootDir": "./src" と設定し、src/components/button.ts というファイルがあった場合、outDir が ./dist なら dist/components/button.js が生成されます。
もし rootDir を設定しない場合、tsc は共通の親ディレクトリを自動で rootDir と見なそうとしますが、意図しない出力パスになることがあります。


まとめ
rootDir: どこからソースファイルを探し始めるか。
outDir: どこにコンパイル後のファイルを出力するか。